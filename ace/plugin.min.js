/*
 * Ace Editor Plugin for TinyMCE 4.0
 * By Daniel Jones - info@d-k-j.com
 * Tweaked slightly by Mike Smullin <mike.smullin@wildworks.com>
 */
tinymce.PluginManager.add("ace", function(tinymce_editor) {
  function toggleAceEditor() {
    tinymce_editor.windowManager.open({
      title: "Code Editor",
      type: "container",
      id: "mce-ace-editor",
      name: "ace",
      inline: 1,
      buttons: [{
        text: "Ok",
        classes: "primary",
        onclick: function() {
          if (typeof ace_editor !== "undefined") {
            var html = ace_editor.getValue();

            tinymce_editor.focus(), tinymce_editor.undoManager.transact(function() {
              tinymce_editor.setContent(html)
            }), tinymce_editor.selection.setCursorLocation(), tinymce_editor.nodeChanged();

            tinymce_editor.windowManager.close();
          }
        }
      }, {
        text: "Format HTML",
        onclick: function() {
          if (typeof ace_editor !== "undefined" && typeof html_beautify !== "undefined") {
            var html = ace_editor.getValue();

            ace_editor.getSession().setValue(html_beautify(html, {
              indent_inner_html: false,
              indent_size: 2,
              indent_char: ' ',
              wrap_line_length: 80,
              preserve_newlines: true,
              max_preserve_newlines: 3,
              extra_liners: []
            }));
          }
        }
      }, {
        text: "Cancel",
        onclick: "close"
      }]
    });

    if (jQuery('#mce-ace-editor-body').length) {
      jQuery('#mce-ace-editor-body')
        .append('<div id="mce-ace-editor-block"></div>');

      // NOTICE: stylesheet is provided by end-user

      var ace_editor = ace.edit('mce-ace-editor-block');
      ace_editor.setTheme("ace/theme/monokai");
      ace_editor.getSession().setMode("ace/mode/html");
      ace_editor.setOptions({
        fontFamily: 'courier, monospace',
        fontSize: '16px',
        scrollPastEnd: true
      });
      ace_editor.$blockScrolling = Infinity;
      ace_editor.getSession().setUseWrapMode(true);

      // Set editor contents
      ace_editor.getSession().setValue(tinymce_editor.getContent({
        source_view: !0
      }));
    }

    // Only thing needed to get Ace to work is to remove the mce-container class
    // Tinymce re-adds the class so we need to loop it
    // TODO: Find a less HORRIFIC solution for this
    var countchecks = 0;

    function soddoffmce() {
      // Lets do it say 50 times (for 5 seconds)...
      if (countchecks++ == 50) {
        clearTimeout(soddoffloop);
        return;
      }

      soddoffloop = setTimeout(function() {
        if (jQuery('#mce-ace-editor').hasClass('mce-container')) jQuery('#mce-ace-editor').removeClass('mce-container');
        soddoffmce();
      }, 100);
    }

    soddoffmce();
  }

  tinymce_editor.addCommand("mceace_codeEditor", toggleAceEditor), tinymce_editor.addButton("ace", {
    icon: "code",
    tooltip: "Code Editor",
    onclick: toggleAceEditor
  }), tinymce_editor.addMenuItem("ace", {
    icon: "code",
    text: "Code Editor",
    context: "tools",
    onclick: toggleAceEditor
  })
});
