/*
 * Ace Editor Plugin for TinyMCE 4.0
 * By Daniel Jones - info@d-k-j.com
 * Tweaked slightly by Mike Smullin <mike.smullin@wildworks.com>
 */
tinymce.PluginManager.add("ace", function(tinymce_editor) {
  var ace_editor;

  function formatHtml() {
    if (undefined !== ace_editor && undefined !== html_beautify) {
      ace_editor.getSession().setValue(html_beautify(ace_editor.getValue(), {
        indent_inner_html: false,
        indent_size: 2,
        indent_char: ' ',
        wrap_line_length: 80,
        preserve_newlines: true,
        max_preserve_newlines: 3,
        extra_liners: []
      }));
    }
  }

  function toggleAceEditor() {
    tinymce_editor.windowManager.open({
      title: "Edit HTML",
      type: "container",
      id: "mce-ace-editor",
      name: "ace",
      inline: 1,
      onClose: function() { jQuery('body').css('overflow', 'auto'); },
      buttons: [{
        text: "Ok",
        classes: "primary",
        onclick: function() {
          if (typeof ace_editor !== "undefined") {
            var html = ace_editor.getValue();

            tinymce_editor.focus(), tinymce_editor.undoManager.transact(function() {
              tinymce_editor.setContent(html)
            }), tinymce_editor.selection.setCursorLocation(), tinymce_editor.nodeChanged();

            tinymce_editor.windowManager.close();
          }
        }
      }, {
        text: "Format HTML",
        onclick: formatHtml
      }, {
        text: "Cancel",
        onclick: "close"
      }]
    });

    if (jQuery('#mce-ace-editor-body').length) {
      jQuery('#mce-ace-editor-body')
        .append('<div id="mce-ace-editor-block"></div>');

      ace_editor = ace.edit('mce-ace-editor-block');
      ace_editor.setTheme("ace/theme/monokai");
      ace_editor.getSession().setMode("ace/mode/html");
      ace_editor.setOptions({
        fontFamily: 'courier, monospace',
        fontSize: '16px',
        scrollPastEnd: true,
        showPrintMargin: false,
        showInvisibles: true
      });
      ace_editor.$blockScrolling = Infinity;
      ace_editor.getSession().setUseWrapMode(true);

      // Set editor contents
      ace_editor.getSession().setValue(tinymce_editor.getContent({
        source_view: !0
      }));

      formatHtml();

      jQuery('body').css('overflow', 'hidden');
    }
  }

  tinymce_editor.addCommand("mceace_codeEditor", toggleAceEditor), tinymce_editor.addButton("ace", {
    icon: "code",
    tooltip: "Edit HTML",
    onclick: toggleAceEditor
  }), tinymce_editor.addMenuItem("ace", {
    icon: "code",
    text: "Edit HTML",
    context: "tools",
    onclick: toggleAceEditor
  })

  // TinyMCE styles mess with Ace, so we remove .mce-container from the modal parent
  setInterval(function() { jQuery('#mce-ace-editor').removeClass('mce-container'); }, 500);
});
